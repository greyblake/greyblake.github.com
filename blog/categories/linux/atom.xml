<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Sergey Potapov Online]]></title>
  <link href="http://greyblake.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://greyblake.com/"/>
  <updated>2012-08-11T03:35:46+03:00</updated>
  <id>http://greyblake.com/</id>
  <author>
    <name><![CDATA[Sergey Potapov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Install Firefox (Iceweasel) 7 on Debian Squeeze]]></title>
    <link href="http://greyblake.com/blog/2011/10/03/how-to-install-firefox-iceweasel-7-on-debian-squeeze/"/>
    <updated>2011-10-03T18:12:54+03:00</updated>
    <id>http://greyblake.com/blog/2011/10/03/how-to-install-firefox-iceweasel-7-on-debian-squeeze</id>
    <content type="html"><![CDATA[<p>First remove lagacy version of Iceweasel:</p>

<pre><code>aptitude remove iceweasel
</code></pre>

<p>Create <code>/etc/apt/sources.list.d/squeeze-backports.list</code> file:</p>

<pre><code># New Mozilla packages for Squeeze
deb http://mozilla.debian.net/ squeeze-backports iceweasel-release
deb http://backports.debian.org/debian-backports squeeze-backports main
</code></pre>

<p>Then run:</p>

<pre><code>aptitude update
aptitude install iceweasel -t squeeze-backports
</code></pre>

<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Powering less to highlight syntax and display line numbers]]></title>
    <link href="http://greyblake.com/blog/2011/09/23/powering-less-to-highlight-syntax-and-display-line-numbers/"/>
    <updated>2011-09-23T17:38:35+03:00</updated>
    <id>http://greyblake.com/blog/2011/09/23/powering-less-to-highlight-syntax-and-display-line-numbers</id>
    <content type="html"><![CDATA[<p>Since I am a command line guy I use <strong>less</strong> tool everywhere and everytime to quickly take a look at files. And quite often those files are different scripts and source code. So, it would be great if syntax was highlighted automatically when I open a file with less. And probably it would be great as well if I saw line numbers.</p>

<!--more-->


<h2>Making less highlight syntax</h2>

<p>It didn't take a long time to find a solution.  There is a pretty tool called <strong>source-highlight</strong>.</p>

<p>It might be exist in standard repository of your system. In Debian like Linux distribution(Debian, Ubuntu, Mint, etc) you can install it with command:</p>

<pre><code>apt-get install source-highlight
</code></pre>

<p>It supports a realy big list of languages(in my case 143) and 12 output formats(esc, html, javadoc, latex, etc). You can use man to get closer with it:</p>

<pre><code>man source-highlight
</code></pre>

<p><strong>source-highlight</strong> package provides a little script which receives a source code file and prints highlighted code. Its path is <code>/usr/share/source-highlight/src-hilite-lesspipe.sh</code>. So we're gonna to use it with <strong>less</strong>.</p>

<p>Fortunately <em>_less</em> is require flexible tool and we can customize it with number of invironment variables. One of them is <code>LESSOPEN</code>. A quote from <code>man less</code>:</p>

<pre><code>LESSOPEN
    Command line to invoke the (optional) input-preprocessor.
</code></pre>

<p>So we can you any pipes to prepare an input for <strong>less</strong>.</p>

<p>Another variable we are going to use is <code>LESS</code>:</p>

<pre><code>LESS
    Options which are passed to less automatically.
</code></pre>

<p>We will use <code>-R</code> option to allow ANSI colors.</p>

<p>So just set up this to variables:</p>

<p><code>bash
export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
export LESS=' -R '
</code></p>

<h2>Making less display line numbers</h2>

<p>To display line numbers just use <code>-N</code> option. If you want <strong>less</strong> to use it everytime add it to <code>LESS</code> variable as well:</p>

<p><code>bash
export LESS=' -RN '
</code></p>

<h2>Make it work everytime</h2>

<p>To make it work in all shell session just add the next code to the end of you <code>$HOME/.bashrc</code> file:</p>

<p>```bash</p>

<h1>syntax highlight for less</h1>

<p>export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
export LESS=' -R -N'</p>

<p>```</p>

<p>Hope this was useful for you. Don't be shy and leave you comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using update-rc.d]]></title>
    <link href="http://greyblake.com/blog/2011/09/18/using-update-rc-d/"/>
    <updated>2011-09-18T21:00:00+03:00</updated>
    <id>http://greyblake.com/blog/2011/09/18/using-update-rc-d</id>
    <content type="html"><![CDATA[<p><code>update-rc.d</code> is tool for adding daemons to /etc/rc[1-6]d files.</p>

<p>If you are using OS with System-V style init scripts you can find you <code>/etc</code> the next directories:</p>

<ul>
<li>rc0.d/</li>
<li>rc1.d/</li>
<li>rc2.d/</li>
<li>rc3.d/</li>
<li>rc4.d/</li>
<li>rc5.d/</li>
<li>rc6.d/</li>
<li>rcS.d/</li>
</ul>


<p>So, what are they for?</p>

<!--more-->


<p>Every directory contains symbol links to daemons located in <code>/etc/init.d/</code>. And every directory represents run level. Usually your system uses third level which means multi user mode with networking. When the system is initializing it starts daemons which have appropriate symbol links in rc3.d.</p>

<p>Here is a short description of every run level:</p>

<ul>
<li><strong>0 (Halt)</strong>  Shuts down the system.</li>
<li><strong>1 (Single-User Mode)</strong>  Mode for administrative tasks.[2][3]</li>
<li><strong>2 (Multi-User Mode)</strong>   Does not configure network interfaces and does not export networks services.[4]</li>
<li><strong>3 (Multi-User Mode with Networking)</strong>   Starts the system normally.[5]</li>
<li><strong>4 (Not used/User-definable)</strong>   For special purposes.</li>
<li><strong>5 (Start the system normally with appropriate display manager.)</strong>   As runlevel 3 + display manager.</li>
<li><strong>6 (Reboot)</strong>    Reboots the system.</li>
</ul>


<p>Usualy you don't need to switch levels, but if you do you should use <code>init</code> command. Take care of what you doing.</p>

<p>OK, take a look at a head of some daemon scripts. For example <code>/etc/init.d/postgresql</code>:</p>

<p>```bash /etc/init.d/postgresql</p>

<h1>!/bin/sh</h1>

<p>set -e</p>

<h3>BEGIN INIT INFO</h3>

<h1>Provides:             postgresql</h1>

<h1>Required-Start:       $local_fs $remote_fs $network $time</h1>

<h1>Required-Stop:        $local_fs $remote_fs $network $time</h1>

<h1>Should-Start:         $syslog</h1>

<h1>Should-Stop:          $syslog</h1>

<h1>Default-Start:        2 3 4 5</h1>

<h1>Default-Stop:         0 1 6</h1>

<h1>Short-Description:    PostgreSQL RDBMS server</h1>

<h3>END INIT INFO</h3>

<p>```</p>

<p>It has a self descriptive comment in an appropriate format. <code>Default-Start</code> section contains numbers of levels which runs postgres daemon. <code>Default-Stop</code> section contains number of levels which should not run PostgreSQL, so when you switch to them PostgreSQL daemon will be stopped.</p>

<p>So, let's assume you have created you own daemon which knows how to process <code>start</code> and <code>stop</code> arguments and want it to run on appropriate levels. You need to create symbol links like these:</p>

<pre><code>/etc/rc1.d/K03postgresql -&gt; ../init.d/postgresql
/etc/rc4.d/S02postgresql -&gt; ../init.d/postgresql
/etc/rc0.d/K03postgresql -&gt; ../init.d/postgresql
/etc/rc2.d/S02postgresql -&gt; ../init.d/postgresql
/etc/rc3.d/S02postgresql -&gt; ../init.d/postgresql
/etc/rc6.d/K03postgresql -&gt; ../init.d/postgresql
/etc/rc5.d/S02postgresql -&gt; ../init.d/postgresql
</code></pre>

<p>By the way prefix <code>K</code> means kill(stop) process and <code>S</code> means start.
It's a little routine work, right? But in case if you have descriptive comment I metioned above you just can use <code>update-rc.d</code> tool. It creates all necessary symbol links based on the comment. So just run:</p>

<pre><code>update-rc.d postgres defaults
</code></pre>

<p>Change <code>postgres</code> with name of your daemon.</p>

<h2>Why?</h2>

<p>Unfortunatly I often forget how this tool is called.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beep alarm]]></title>
    <link href="http://greyblake.com/blog/2011/01/23/beep-alarm/"/>
    <updated>2011-01-23T23:24:39+02:00</updated>
    <id>http://greyblake.com/blog/2011/01/23/beep-alarm</id>
    <content type="html"><![CDATA[<h2>Intro</h2>

<p>Someone would say I am brainsick... So may be I am.</p>

<p>By some reasons I had no my loudspeakers and an alarm on my mobile never wake me up.
So I decided to create an alarm based on <code>beep</code> Unix tool. This tool allows you to play sound with specified frequency and delay on your speaker.</p>

<p>Some times after I decided that simple "Be-e-e-e-p" sound is borring and I created a player.
It can play tunes defined in format for old Nokia mobiles.
Have you ever type something like this:</p>

<pre><code>8e2 8d2 8d2 8c2 8b1 8a1 8b1 8c2 8f1 8e2 8d2 8- 8- 8d2 8c2 8b1
</code></pre>

<p>...to add new ringtone for your mobile?</p>

<!--more-->


<h2>Getting and usage</h2>

<p>You should clone my <a href="http://github.com/greyblake/beep-alarm">repository from github</a>:</p>

<pre><code>git clone git://github.com/greyblake/beep-alarm.git
</code></pre>

<p>And to try it just type:</p>

<pre><code>./beep-alarm/bin/beep-alarm
</code></pre>

<p>You should listen a sound of russian song "Kalinka". Unfortunately the only way to stop it is to send INT signal with pressing <code>Ctrl-C</code>.</p>

<p>With this tool you can specify time at what you want a tune to play. Next example make it play at 8:00:</p>

<pre><code>beep-alarm 8:00
</code></pre>

<p>It has 7 bultin melodies(to see them use <code>--help</code>), so you can choose another one with <code>-m</code> option:</p>

<pre><code># play Metallica - Unforgiven
beep-alarm -m 3
</code></pre>

<p>You can even change tempo of tune(default is 120)!</p>

<pre><code>beep-alarm -t 200
</code></pre>

<p>And even play a tune in different keynote:</p>

<pre><code># Down for 2 semitones
beep-alarm -o -2
</code></pre>

<p>To get more information and example use <code>--help</code> option.</p>

<h2>So...</h2>

<p>I hope you'll enjoy it and will never oversleep your work:)</p>
]]></content>
  </entry>
  
</feed>
